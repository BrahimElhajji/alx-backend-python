pipeline {
    agent any

    environment {
        VENV = 'venv'
        DOCKER_IMAGE = 'yourdockerhubusername/messaging_app:latest' // Placeholder
    }

    stages {
        stage('Clone repository') {
            steps {
                git credentialsId: 'github-creds', url: 'https://github.com/BrahimElhajji/alx-backend-python.git'
                sh 'git branch'
            }
        }

        stage('Install dependencies') {
            steps {
                sh 'python3 -m venv venv'
                sh './venv/bin/pip3 install -r messaging_app/requirements.txt'
            }
        }

        stage('Run tests') {
            steps {
                sh './venv/bin/pytest messaging_app/tests --junitxml=report.xml'
            }
        }

        stage('Publish test report') {
            steps {
                junit 'report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'echo "Simulating Docker build..."'
                sh 'docker build -t $DOCKER_IMAGE -f messaging_app/Dockerfile .'
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "Simulating Docker push..."
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }
    }

    triggers {
        // Manual trigger only
    }
}
